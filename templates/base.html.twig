{# templates/base.html.twig #}
<!doctype html>
<html lang="en">
    <head>
        {# Required meta tags #}
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        {# Bootstrap CSS #}
        <link rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
            integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
            crossorigin="anonymous">

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.2/font/bootstrap-icons.css">
        {# Our CSS #}
        <link rel="stylesheet"
              href="{{ asset('css/main.css') }}">
        {# .ico Icon #}
        <link rel="icon" type="image/x-icon" href="{% block favicon %}{{ asset('assets/wwwIcon.ico') }}{% endblock %}">
        <title>{% block title %}World Wild Wiki{% endblock %}</title>
        <style>
            {# Überschreibt die css Klassen direkt, für dark/light Mode #}
            .bannerColor{
                {# LightMode #}
                background-color: #eceff3;
                {% if darkMode is defined %}
                    {% if darkMode == true%} background-color: #2b2b2c !important;
                    {% endif %}
                {% endif %}
            }
            .localBackground{
                {% if darkMode is defined %}
                    {% if darkMode == true%} background-color: #3c3f41;
                    {% endif %}
                {% endif %}
            }
            .textColor{
                {# LightMode #}
                color: black;
                {% if darkMode is defined %}
                    {% if darkMode == true%} color: #eceff3;
                    {% endif %}
                {% endif %}
            }
            .filter-logo{
                {% if darkMode is defined %}
                    {% if darkMode == true%} filter: invert(100%);
                    {% endif %}
                {% endif %}
            }
            .textArea{
                {% if darkMode is defined %}
                    {% if darkMode == true%} background-color: #343a40 !important;
                    {% endif %}
                {% endif %}
            }
            .textArea:focus{
            {# LightMode #}
                color: black;
                {% if darkMode is defined %}
                    {% if darkMode == true%} color: #eceff3;
                    {% endif %}
                {% endif %}
            }
            .borderDarkMode{
                {% if darkMode is defined %}
                    {% if darkMode == true%} border-color: #6c757d !important;
                    {% endif %}
                {% endif %}
            }

            hr{
            {% if darkMode is defined %}
                {% if darkMode == true%} border-top: 1px solid rgba(255, 255, 255, 0.1);
                {% endif %}
            {% endif %}
            }

            .noLink:hover{
                text-decoration: none;
                color: black;
                {% if darkMode is defined %}
                    {% if darkMode == true%} color: #eceff3;
                    {% endif %}
                {% endif %}
            }

        </style>
    </head>
    <body class="localBackground textColor">

        {# Zurück zum Seiten anfang #}
        <button
                type="button"
                class="btn btn-circle
                {% if darkMode is defined %}
                    {% if darkMode == true%} btn-light
                    {% else %} btn-dark
                    {% endif %}
                {% else %} btn-dark
                {% endif %}
                "
                id="btn-back-to-top"
        >
            <i class="bi bi-arrow-up"></i>
        </button>


        {# Header mit unserem Logo #}
        <header>
            <div class="bannerColor">
                <div class="container">
                    <div class="text-center">
                        {# Das Bild liegt in "public/assets/World-Wild-Wiki_LOGO.svg" #}
                        <img class="normalPadding filter-logo" src="
                            {% block bannerImg %}
                                {{ asset('assets/World-Wild-Wiki_LOGO.svg') }}
                            {% endblock %}
                        " alt="World Wide Wiki" width="30%"/>
                    </div>
                </div>
            </div>
        </header>
        {# Navbar, sticky-top muss ein direktes Child von body sein, damit die Navbar am oberen Bildschirm bleibt #}
        <div class="bannerColor sticky-top">
            <div class="container">
                <nav class="navbar navbar-expand-lg py-0
                            {% if darkMode is defined %}
                                {% if darkMode == true %} navbar-dark
                                {% else %} navbar-light
                                {% endif %}
                            {% else %} navbar-light
                            {% endif %}"
                >
                    <a class="navLink textColor navbar-brand" href="/">Home </a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>

                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav mr-auto">
                            <li class="dropdown">
                                <a class="nav-link dropdown-toggle navLink" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Wiki
                                </a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                                        <a class="dropdown-item" href="/createWiki">Neues Wiki erstellen</a>
                                        <div class="dropdown-divider"></div>
                                    {% endif %}
                                    <a class="dropdown-item" href="/browse">Wikis erkunden</a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" href="/rdmWiki">Zufälliges Wiki</a>
                                </div>
                            </li>
                        </ul>
                        <div class="p-2">
                            {% if darkMode is defined %}
                                {% if darkMode == false %} <button id="darkModeButton" type="button" class="btn btn-dark"><i class="bi bi-moon"></i></button>
                                {% else %} <button id="lightModeButton" type="button" class="btn btn-light"><i class="bi bi-sun"></i></button>
                                {% endif %}
                            {% else %} <button id="darkModeButton" type="button" class="btn btn-dark"><i class="bi bi-moon"></i></button>
                            {% endif %}
                        </div>
                        <div class="p-2">
                            {% block signinSection %}
                                {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                                    <a class="btn btn-outline-secondary" href="/logout">Logout</a>
                                {% else %}
                                    <a class="btn btn-outline-secondary" href="/login">Sign in</a>
                                {% endif %}
                            {% endblock %}
                        </div>
                    </div>
                </nav>
            </div>
        </div>

        {# Falls es eine flash Message gibt #}
        {% for flashSuccess in app.flashes('success') %}
            <div class="container mt-3">
                <div class="alert alert-success" role="alert">
                    {{ flashSuccess }}
                </div>
            </div>
        {% endfor %}

        {% for flashError in app.flashes('error') %}
            <div class="container mt-3">
                <div class="alert alert-danger" role="alert">
                    {{ flashError }}
                </div>
            </div>
        {% endfor %}

        {% for flashError in app.flashes('warning') %}
            <div class="container mt-3">
                <div class="alert alert-warning" role="alert">
                    {{ flashError }}
                </div>
            </div>
        {% endfor %}

        {% block body %}
            Ich werde überschrieben, sobald ein anderes Template geladen wird :)
        {% endblock %}

        {# Footer #}
        <footer class="bannerColor">
            <div class="container">
                <div class="py-3 my-3">
                    <ul class="nav justify-content-center border-bottom pb-3 mb-3">
                        <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Impressum</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Datenschutz</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Entwickler</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">About</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-2 text-muted"><i class="bi-discord"></i></a></li>
                    </ul>
                    <div class="text-center">
                        <img class="img-fluid filter-logo" src="{{ asset('assets/World-Wild-Wiki_LOGO.svg') }}" alt="World Wild Wiki" width="10%"/>
                    </div>
                </div>
            </div>
        </footer>

        {# Optional JavaScript #}
        {# jQuery first, then Popper.js, then Bootstrap JS #}
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

        {# Markdown parser #}
        {# https://github.com/markedjs/marked #}
        <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

        {# DOMPurify Sanitizer #}
        {# https://github.com/cure53/DOMPurify #}
        <script type="text/javascript" src="{{ asset('js/purify.min.js') }}"></script>


        {# Our JavaScript #}
        <script type="text/javascript" src="{{ asset('js/main.js') }}"></script>

        {# Script only for this side #}
        <script>
            // Parser zu .md
            let text='Marked - Markdown Parser\n' +
            '========================\n' +
            '\n' +
            '[Marked] lets you convert [Markdown] into HTML.  Markdown is a simple text format whose goal is to be very easy to read and write, even when not converted to HTML.  This demo page will let you type anything you like and see how it gets converted.  Live.  No more waiting around.\n' +
            '\n' +
            'How To Use The Demo\n' +
            '-------------------\n' +
            '\n' +
            '1. Type in stuff on the left.\n' +
            '2. See the live updates on the right.\n' +
            '\n' +
            'That\'s it.  Pretty simple.  There\'s also a drop-down option in the upper right to switch between various views:\n' +
            '\n' +
            '- **Preview:**  A live display of the generated HTML as it would render in a browser.\n' +
            '- **HTML Source:**  The generated HTML before your browser makes it pretty.\n' +
            '- **Lexer Data:**  What [marked] uses internally, in case you like gory stuff like this.\n' +
            '- **Quick Reference:**  A brief run-down of how to format things using markdown.\n' +
            '\n' +
            'Why Markdown?\n' +
            '-------------\n' +
            '\n' +
            'It\'s easy.  It\'s not overly bloated, unlike HTML.  Also, as the creator of [markdown] says,\n' +
            '\n' +
            '> The overriding design goal for Markdown\'s\n' +
            '> formatting syntax is to make it as readable\n' +
            '> as possible. The idea is that a\n' +
            '> Markdown-formatted document should be\n' +
            '> publishable as-is, as plain text, without\n' +
            '> looking like it\'s been marked up with tags\n' +
            '> or formatting instructions.\n' +
            '\n' +
            'Ready to start writing?  Either start changing stuff on the left or\n' +
            '[clear everything](/demo/?text=) with a simple click.\n' +
            '\n' +
            '[Marked]: https://github.com/markedjs/marked/\n' +
            '[Markdown]: http://daringfireball.net/projects/markdown/\n' +
            '\n' +
            '```C\n' +
            'Scanf("%s",&H);\n' +
            'assdasd\n' +
            'asddddadaadada\n' +
            '```\n' +
            '`Test`'
            let dirtyText = marked.parse(text); //parsed md zu html
            // Erlaubt nur HTML
            let cleanText = DOMPurify.sanitize(dirtyText, { USE_PROFILES: {html: true} }); //Überprüft den Code und entfernt alle Text die nicht in standard html sind <script> etc
            // Erlaubt HTML, SVG und MathML
            //let cleanText = DOMPurify.sanitize(dirtyText);
            $("#parseToMD").html(cleanText);
        </script>

        {# Füge <script> tags ein die von anderen Templates genutzt werden #}
        {% block scripts %}
        {% endblock %}

    </body>
</html>
